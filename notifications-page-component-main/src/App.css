:root {
  --White: hsl(0, 0%, 100%);
  --VeryLightGrayishBlue: hsl(210, 60%, 98%);
  --LightGrayishBlue1: hsl(211, 68%, 94%);
  --LightGrayishBlue2: hsl(205, 33%, 90%);
  --GrayishBlue: hsl(219, 14%, 63%);
  --DarkGrayishBlue: hsl(219, 12%, 42%);
  --VeryDarkblue: hsl(224, 21%, 14%);
  --darkBlue: hsl(221, 66%, 25%);
}

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
  margin: 0;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  background-color: var(--LightGrayishBlue2);
}
/*
  5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  8. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

.flexNotifs {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.howManyNotifs {
  background-color: var(--darkBlue);
  color: var(--White);
  padding: 0px 5px;
  border-radius: 1vh;
  width: 30px;
}

.MarkAllAsRead {
  color: var(--GrayishBlue);
  font-weight: 600;
}

.bigContainer {
  margin-top: -8rem;
  background-color: var(--White);
  border-radius: 5vh;
  display: flex;
  flex-direction: column;
  max-width: 58rem;
  padding: 2rem;
  transform: scale(0.7);
  width: 100%;
}

.notificationText {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@media (max-width: 520px) {
  .notificationText {
    flex-direction: column;
  }
}

.notifications {
  margin-top: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
}

.notificationItem {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 1rem;
  border-radius: 2vh;
}

.blueBg {
  background-color: var(--LightGrayishBlue1);
}

.witheBg {
  background-color: var(--White);
}

.annoyingDivs {
  display: flex;
  gap: 20px;
}

.importantInfos {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}

.image {
  cursor: pointer;
  max-width: 3rem;
  max-height: 3rem;
}

.action {
  color: var(--GrayishBlue);
}

.privateMessage {
  margin-top: 7px;
  border: 1px solid rgba(150, 150, 150, 0.158);
  border-radius: 1vh;
  padding: 15px;
  text-align: start;
}

.imageHelper {
  justify-self: end;
}

.mainInfos {
  display: flex;
  text-align: justify;
  flex-direction: column;
  justify-content: center;
  align-items: start;
  flex-wrap: wrap;
}

.reason {
  text-align: justify;
}

.specificInfos {
  display: flex;
  gap: 5px;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

@media (max-width: 989px) {
  .specificInfos {
    justify-content: start;
  }
}

.groupText {
  font-weight: 700;
  color: var(--darkBlue);
  text-align: start;
}
/* @media (max-width: 678px) {

} */

.PostText {
  font-weight: 700;
  color: var(--DarkGrayishBlue);
}

.redDot {
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background-color: red;
}

.noRedDot {
  background-color: var(--White);
}

.notRead {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5px;
}

.blueAndPointer:hover {
  color: var(--darkBlue);
  cursor: pointer;
}

.pOnHover:hover {
  cursor: pointer;
  background-color: var(--LightGrayishBlue1);
  border: 1px solid rgba(150, 150, 150, 0);
}
